//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IOrderService", CallbackContract=typeof(Client.ServiceReference2.IOrderServiceCallback))]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getwishList", ReplyAction="http://tempuri.org/IOrderService/getwishListResponse")]
        Kundenservice.Book[] getwishList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getwishList", ReplyAction="http://tempuri.org/IOrderService/getwishListResponse")]
        System.Threading.Tasks.Task<Kundenservice.Book[]> getwishListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/addBook", ReplyAction="http://tempuri.org/IOrderService/addBookResponse")]
        void addBook(Kundenservice.Book b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/addBook", ReplyAction="http://tempuri.org/IOrderService/addBookResponse")]
        System.Threading.Tasks.Task addBookAsync(Kundenservice.Book b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getBook", ReplyAction="http://tempuri.org/IOrderService/getBookResponse")]
        Kundenservice.Book getBook(System.Guid b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/getBook", ReplyAction="http://tempuri.org/IOrderService/getBookResponse")]
        System.Threading.Tasks.Task<Kundenservice.Book> getBookAsync(System.Guid b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/delBook", ReplyAction="http://tempuri.org/IOrderService/delBookResponse")]
        void delBook(System.Guid b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/delBook", ReplyAction="http://tempuri.org/IOrderService/delBookResponse")]
        System.Threading.Tasks.Task delBookAsync(System.Guid b);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/wishlistAdd")]
        void wishlistAdd(Kundenservice.Book b, string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/wishlistAdd")]
        System.Threading.Tasks.Task wishlistAddAsync(Kundenservice.Book b, string user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/AddBook")]
        void AddBook();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/DelBook")]
        void DelBook();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/FindBook")]
        void FindBook();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : Client.ServiceReference2.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.DuplexClientBase<Client.ServiceReference2.IOrderService>, Client.ServiceReference2.IOrderService {
        
        public OrderServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Kundenservice.Book[] getwishList() {
            return base.Channel.getwishList();
        }
        
        public System.Threading.Tasks.Task<Kundenservice.Book[]> getwishListAsync() {
            return base.Channel.getwishListAsync();
        }
        
        public void addBook(Kundenservice.Book b) {
            base.Channel.addBook(b);
        }
        
        public System.Threading.Tasks.Task addBookAsync(Kundenservice.Book b) {
            return base.Channel.addBookAsync(b);
        }
        
        public Kundenservice.Book getBook(System.Guid b) {
            return base.Channel.getBook(b);
        }
        
        public System.Threading.Tasks.Task<Kundenservice.Book> getBookAsync(System.Guid b) {
            return base.Channel.getBookAsync(b);
        }
        
        public void delBook(System.Guid b) {
            base.Channel.delBook(b);
        }
        
        public System.Threading.Tasks.Task delBookAsync(System.Guid b) {
            return base.Channel.delBookAsync(b);
        }
        
        public void wishlistAdd(Kundenservice.Book b, string user) {
            base.Channel.wishlistAdd(b, user);
        }
        
        public System.Threading.Tasks.Task wishlistAddAsync(Kundenservice.Book b, string user) {
            return base.Channel.wishlistAddAsync(b, user);
        }
    }
}
